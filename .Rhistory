source('~/Box Sync/attie/QTLfigs/R/ail_fig.R')
source('~/Box Sync/attie/QTLfigs/R/ail_fig.R')
source('~/Box Sync/attie/QTLfigs/R/ail_fig.R')
source('~/Box Sync/attie/QTLfigs/R/batches_fig.R')
source('~/Box Sync/attie/QTLfigs/R/causal_network.R')
install.packages("qtl")
source('~/Box Sync/attie/QTLfigs/R/congenic_fig.R')
install.packages("lineup")
source('~/Box Sync/attie/QTLfigs/R/pleiotropy_network.R')
source('~/Box Sync/attie/QTLfigs/R/epistasis_fig.R')
source('~/Box Sync/attie/QTLfigs/R/hs_fig.R')
source('~/Box Sync/attie/QTLfigs/R/intercross.R')
install.packages("simcross")
devtools::install_github("rqtl/simcross")
devtools::install_github("kbroman/simcross")
source('~/Box Sync/attie/QTLfigs/R/intercross.R')
source('~/Box Sync/attie/QTLfigs/R/intercross.R')
X
library(broman)
library(simcross)
color <- brocolors("crayons")[c("Cornflower", "Blush")]
source("R/colors.R")
pdf("Figs/intercross.pdf", width=9.75, height=5, pointsize=14)
par(fg="white", bty="n", bg=bgcolor)
par(mar=rep(0, 4))
plot(0,0,xlim=c(0,864),ylim=c(0,480),xaxt="n",yaxt="n",xlab="",ylab="",type="n")
rect(c(300,328),c(480,480),c(310,338),c(385,385),col=color[1],border=color[1], lend=1, ljoin=1)
rect(c(526,554),c(480,480),c(536,564),c(385,385),col=color[2],border=color[2], lend=1, ljoin=1)
points(432,440,pch=4,cex=2.5,lwd=2)
segments(432,400,432,340,lwd=2)
segments(319,340,545,340,lwd=2)
arrows(c(319,545),c(340,340),c(319,545),c(300,300),lwd=2,len=0.1)
text(300-25,(480+385)/2,expression(P[1]),cex=2,adj=c(1,0.5))
text(564+25,(480+385)/2,expression(P[2]),cex=2,adj=c(0,0.5))
rect(300,287,310,192,col=color[1],border=color[1], lend=1, ljoin=1)
rect(328,287,338,192,col=color[2],border=color[2], lend=1, ljoin=1)
rect(526,287,536,192,col=color[1],border=color[1], lend=1, ljoin=1)
rect(554,287,564,192,col=color[2],border=color[2], lend=1, ljoin=1)
points(432,247,pch=4,cex=2.5,lwd=2)
segments(432,207,432,147,lwd=2)
segments(57,147,849,147,lwd=2)
arrows(seq(57,849,by=88),rep(147,10),seq(57,849,by=88),rep(107,10),lwd=2,len=0.1)
text(300-25,(287+192)/2,expression(F[1]),cex=2,adj=c(1,0.5))
text(564+25,(287+192)/2,expression(F[1]),cex=2,adj=c(0,0.5))
f1 <- create_parent(100,c(1,2))
set.seed(994)
f2 <- vector("list",10)
for(i in 1:10) f2[[i]] <- cross(f1,f1,m=10,obl=TRUE)
for(i in 1:10) f2[i] <- cross(f1,f1,m=10,obl=TRUE)
f2
cross(f1, f1, m = 10, obl = TRUE)
f1
?cross
f1
f1 <- create_parent(100,c(1,2))
set.seed(994)
f2 <- vector("list",10)
for(i in 1:10) f2[i] <- cross(f1,f1,m=10,obligate.chiasma = TRUE)
for(i in 1:10) f2[[i]] <- cross(f1,f1,m=10,obligate.chiasma = TRUE)
for(i in 1:10) f2[[i]] <- cross(f1,f1,m=10,obligate.chiasma = TRUE)
cross(f1, f1)
for(i in 1:10) f2[[i]] <- cross(f1$mat,f1$pat,m=10,obligate.chiasma = TRUE)
for(i in 1:10) f2[[i]] <- cross(f1$mat,f1$pat,m=10,obligate.chiasma = TRUE)
cross(f1, f1)
for(i in 1:10) f2[[i]] <- cross(f1,f1,m=10,obligate.chiasma = TRUE)
?cross
cross
meiosis()
?meiosis
library(simcross)
?meiosis
View(meiosis)
help(package = "simcross")
rm(meiosis)
pdf("Figs/intercross.pdf", width=9.75, height=5, pointsize=14)
par(fg="white", bty="n", bg=bgcolor)
par(mar=rep(0, 4))
plot(0,0,xlim=c(0,864),ylim=c(0,480),xaxt="n",yaxt="n",xlab="",ylab="",type="n")
rect(c(300,328),c(480,480),c(310,338),c(385,385),col=color[1],border=color[1], lend=1, ljoin=1)
rect(c(526,554),c(480,480),c(536,564),c(385,385),col=color[2],border=color[2], lend=1, ljoin=1)
points(432,440,pch=4,cex=2.5,lwd=2)
segments(432,400,432,340,lwd=2)
segments(319,340,545,340,lwd=2)
arrows(c(319,545),c(340,340),c(319,545),c(300,300),lwd=2,len=0.1)
text(300-25,(480+385)/2,expression(P[1]),cex=2,adj=c(1,0.5))
text(564+25,(480+385)/2,expression(P[2]),cex=2,adj=c(0,0.5))
rect(300,287,310,192,col=color[1],border=color[1], lend=1, ljoin=1)
rect(328,287,338,192,col=color[2],border=color[2], lend=1, ljoin=1)
rect(526,287,536,192,col=color[1],border=color[1], lend=1, ljoin=1)
rect(554,287,564,192,col=color[2],border=color[2], lend=1, ljoin=1)
points(432,247,pch=4,cex=2.5,lwd=2)
segments(432,207,432,147,lwd=2)
segments(57,147,849,147,lwd=2)
arrows(seq(57,849,by=88),rep(147,10),seq(57,849,by=88),rep(107,10),lwd=2,len=0.1)
text(300-25,(287+192)/2,expression(F[1]),cex=2,adj=c(1,0.5))
text(564+25,(287+192)/2,expression(F[1]),cex=2,adj=c(0,0.5))
f1 <- create_parent(100,c(1,2))
set.seed(994)
f2 <- vector("list",10)
for(i in 1:10) f2[[i]] <- cross(f1,f1,m=10,obligate.chiasma = TRUE)
?cross
cross
sim.cross
?sim.cross
?cross
mom <- create_parent(100, 1:2)
dad <- create_parent(100, 1:2)
cross(mom, dad)
mom
source('~/Box Sync/attie/QTLfigs/R/meiosis_func.R')
cross(mom, dad)
meiosis
meiosis.sub()
meiosis
meiosis.sub(mom, 10, FALSE)
meiosis.sub
?create_parent
sim_meiosis(mom)
?sim_meiosis
?meiosis
?cross
rm(meiosis)
rm(meiosis.sub)
source('~/Box Sync/attie/QTLfigs/R/hs_fig.R')
source('~/Box Sync/attie/QTLfigs/R/hs_fig.R')
?cross
cross
meiosis <- sim_meiosis
source('~/Box Sync/attie/QTLfigs/R/hs_fig.R')
n.lines <- 80
bgcolor <- broman::brocolors("bg")
color <- qtl2::CCcolors
pdf("Figs/hs.pdf", width=9.75, height=6.5, pointsize=16, onefile=TRUE)
par(mar=rep(0.1,4),las=1,fg="white",col="white",col.axis="white",col.lab="white",
bg=bgcolor, bty="n")
plot(0,0,xlim=c(0,864),ylim=c(25,480),xaxt="n",yaxt="n",xlab="",ylab="",type="n")
u <- par("usr")
text(u[1],460,expression(G[0]),adj=c(0,0.5))
xloc <- 10
yloc <- 480
for(i in 1:8) {
rect(xloc,yloc,xloc+8,yloc-40,col=color[i],border=color[i], lend=1, ljoin=1)
rect(xloc+20,yloc,xloc+28,yloc-40,col=color[i],border=color[i], lend=1, ljoin=1)
text(xloc+14,yloc-50,LETTERS[i],adj=c(0.5,1))
xloc <- xloc+38+35+46
}
set.seed(11716365)
#source("R/meiosis_func.R")
gen <- vector("list", n.lines)
for(i in 1:n.lines)
gen[[i]] <- create.par(100, sample(1:8, 2))
wh <- seq(1, n.lines, by=5)
xloc <- 10
yloc <- yloc - 80
for(i in 1:15) {
g <- c(gen[[wh[i]]][[1]][2,1], gen[[wh[i]]][[2]][2,1])
rect(xloc,yloc,xloc+8,yloc-40,col=color[g[1]],border=color[g[1]], lend=1, ljoin=1)
rect(xloc+20,yloc,xloc+28,yloc-40,col=color[g[2]],border=color[g[2]], lend=1, ljoin=1)
xloc <- xloc+(38+35+46)/2
}
text(u[1],yloc-20,expression(G[1]),adj=c(0,0.5))
mysample <- function(n)
as.numeric(t(apply(matrix(1:n, ncol=2, byrow=TRUE), 2, sample)))
old <- gen[mysample(n.lines)]
for(i in 1:(n.lines/2)) {
gen[[i*2-1]] <- cross(old[[i*2-1]], old[[i*2]])
gen[[i*2]] <- cross(old[[i*2-1]], old[[i*2]])
}
Q
cross
source('~/Box Sync/attie/QTLfigs/R/intercross.R')
source('~/Box Sync/attie/QTLfigs/R/ri8_fig.R')
source('~/Box Sync/attie/QTLfigs/R/ri8_fig.R')
source('~/Box Sync/attie/QTLfigs/R/ri8_fig.R')
source("R/colors.R")
color <- c(rgb(102,203,254,maxColorValue=255),
#           rgb(254,102,254,maxColorValue=255),
rgb(254,  0,128,maxColorValue=255),
rgb(102,254,102,maxColorValue=255),
rgb(128,  0,128,maxColorValue=255),
rgb(203,102,254,maxColorValue=255),
rgb(254,203,102,maxColorValue=255),
rgb(  0,128,128,maxColorValue=255),
rgb(102,102,102,maxColorValue=255))
#bitmap(file="../Figs/ri8.bmp", width=9, height=5, res=288,
#       pointsize=14)
pdf("Figs/ri8.pdf", width=9.75, height=6.5, pointsize=16, onefile=TRUE)
par(mar=rep(0.1,4),las=1,fg="white",col="white",col.axis="white",col.lab="white",
bg=bgcolor,bty="n")
plot(0,0,xlim=c(0,864),ylim=c(25,480),xaxt="n",yaxt="n",xlab="",ylab="",type="n")
u <- par("usr")
text(u[1],460,expression(G[0]),adj=c(0,0.5))
xloc <- 10
for(i in 1:8) {
rect(xloc,480,xloc+10,440,col=color[i],border=color[i], lend=1, ljoin=1)
rect(xloc+28,480,xloc+38,440,col=color[i],border=color[i], lend=1, ljoin=1)
text(xloc+19,430,LETTERS[i],adj=c(0.5,1))
if((i %% 2)==0) {
points(xloc-27.5,460,pch=4,cex=1.3)
arrows(xloc-27.5,445,xloc-27.5,410,len=0.1)
}
xloc <- xloc+38+55
if((i %% 2)==0) xloc <- xloc+50
}
xloc <- 10+38+55-27.5
xxloc <- NULL
for(i in 1:4) {
xxloc <- c(xxloc,xloc)
rect(xloc-19,400,xloc- 9,360,col=color[2*i-1],border=color[2*i-1], lend=1, ljoin=1)
rect(xloc+ 9,400,xloc+19,360,col=color[2*i],border=color[2*i], lend=1, ljoin=1)
#  text(xloc,350,paste(LETTERS[2*i-1],LETTERS[2*i],sep=""),adj=c(0.5,1))
text(xloc-14,350,LETTERS[2*i-1],adj=c(0.5,1))
text(xloc+14,350,LETTERS[2*i],adj=c(0.5,1))
xloc <- xloc+(38+55)*2+50
}
xxloc <- c(mean(xxloc[1:2]),mean(xxloc[3:4]))
points(xxloc[1],380,pch=4,cex=1.3)
arrows(xxloc[1],365,xxloc[1],330,len=0.1)
points(xxloc[2],380,pch=4,cex=1.3)
arrows(xxloc[2],365,xxloc[2],330,len=0.1)
text(u[1],380,expression(G[1]),adj=c(0,0.5))
file <- "_cache/for_ri8_fig.RData"
if(file.exists(file)) {
load(file)
} else {
f1 <- vector("list",4)
for(i in 1:4) f1[[i]] <- create.par(100,c(2*i-1,2*i))
set.seed(112099)
f2a <- cross(f1[[1]],f1[[2]],m=10,obl=TRUE)
f2b <- cross(f1[[3]],f1[[4]],m=10,obl=TRUE)
f3a <- cross(f2a,f2b,m=10,obl=TRUE)
f3b <- cross(f2a,f2b,m=10,obl=TRUE)
f4a <- cross(f3a,f3b,m=10,obl=TRUE)
f4b <- cross(f3a,f3b,m=10,obl=TRUE)
temp <- list(f4a,f4b)
for(i in 1:30) {
fa <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
fb <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
temp <- list(fa,fb)
}
save(f1,f2a,f2b,f3a,f3b,f4a,f4b,fa,file=file)
}
file <- "_cache/for_ri8_fig.RData"
if(file.exists(file)) {
load(file)
} else {
f1 <- vector("list",4)
for(i in 1:4) f1[[i]] <- create.par(100,c(2*i-1,2*i))
set.seed(112099)
f2a <- cross(f1[[1]],f1[[2]],m=10,obl=TRUE)
f2b <- cross(f1[[3]],f1[[4]],m=10,obl=TRUE)
f3a <- cross(f2a,f2b,m=10,obl=TRUE)
f3b <- cross(f2a,f2b,m=10,obl=TRUE)
f4a <- cross(f3a,f3b,m=10,obl=TRUE)
f4b <- cross(f3a,f3b,m=10,obl=TRUE)
temp <- list(f4a,f4b)
for(i in 1:30) {
fa <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
fb <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
temp <- list(fa,fb)
}
save(f1,f2a,f2b,f3a,f3b,f4a,f4b,fa,file=file)
}
f1 <- vector("list",4)
for(i in 1:4) f1[[i]] <- create.par(100,c(2*i-1,2*i))
if(file.exists(file)) {
load(file)
} else {
f1 <- vector("list",4)
for(i in 1:4) f1[[i]] <- create_parent(100,c(2*i-1,2*i))
set.seed(112099)
f2a <- cross(f1[[1]],f1[[2]],m=10,obl=TRUE)
f2b <- cross(f1[[3]],f1[[4]],m=10,obl=TRUE)
f3a <- cross(f2a,f2b,m=10,obl=TRUE)
f3b <- cross(f2a,f2b,m=10,obl=TRUE)
f4a <- cross(f3a,f3b,m=10,obl=TRUE)
f4b <- cross(f3a,f3b,m=10,obl=TRUE)
temp <- list(f4a,f4b)
for(i in 1:30) {
fa <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
fb <- cross(temp[[1]],temp[[2]],m=10,obl=TRUE)
temp <- list(fa,fb)
}
save(f1,f2a,f2b,f3a,f3b,f4a,f4b,fa,file=file)
}
rect(xxloc[1]-19,320,xxloc[1]- 9,280,col=color[1],border=color[1], lend=1, ljoin=1)
rect(xxloc[1]+ 9,320,xxloc[1]+19,280,col=color[3],border=color[3], lend=1, ljoin=1)
rect(xxloc[2]-19,320,xxloc[2]- 9,280,col=color[5],border=color[5], lend=1, ljoin=1)
rect(xxloc[2]+ 9,320,xxloc[2]+19,280,col=color[7],border=color[7], lend=1, ljoin=1)
mult <- 40/f2a$mat[1,ncol(f2a$mat)]
mult <- 40/f2a$mat[ncol(f2a$mat)]
f2a$mat
mult <- 40/f2a$mat$alleles[2]
temp <- f2a$mat
for(j in 2:ncol(temp)) {
if(temp[2,j]==2)
rect(xxloc[1]-19,280+temp[1,j]*mult,xxloc[1]-9,280+temp[1,j-1]*mult,
col=color[2],border=color[2], lend=1, ljoin=1)
}
for(j in 2:2) {
if(temp[2,j]==2)
rect(xxloc[1]-19,280+temp[1,j]*mult,xxloc[1]-9,280+temp[1,j-1]*mult,
col=color[2],border=color[2], lend=1, ljoin=1)
}
source('~/Box Sync/attie/QTLfigs/R/ri8_fig.R')
paste0("aaa", "bbb")
source('~/Box Sync/attie/QTLfigs/R/central_dogma-dagitty.R')
library(dagitty)
g1 <- dagitty( "dag {
DNA [pos = 0, 0] -> RNA -> Protein
}")
g2 <- dagitty( "dag {
Y <- X <- Z1 <- V -> Z2 -> Y
Z1 <- W1 <-> W2 -> Z2
X <- W1 -> Y
X <- W2 -> Y
}")
plot(graphLayout(g2))
#####
g <- dagitty('dag {
DNA [pos="0,0"]
RNA [pos="1,0"]
Protein [pos="2,0"]
DNA -> RNA -> Protein
}')
pdf("Figs/central_dogma.pdf", height = 2)
plot(g)
dev.off()
#####
g <- dagitty('dag {
Dhtkd1_DNA [pos="0,0"]
Dhtkd1_RNA [pos="1,0"]
DHTKD1_Protein [pos="2,0"]
Dhtkd1_DNA -> Dhtkd1_RNA -> DHTKD1_Protein
}')
pdf("Figs/central_dogma-Dhtkd1.pdf", height = 2)
plot(g)
dev.off()
#####
g <- dagitty('dag {
Dhtkd1\ DNA [pos="0,0"]
Dhtkd1_RNA [pos="1,0"]
DHTKD1_Protein [pos="2,0"]
Dhtkd1_DNA -> Dhtkd1_RNA -> DHTKD1_Protein
}')
plot(g)
g
#####
g <- dagitty('dag {
Dhtkd1_DNA [pos="0,0"]
Dhtkd1_RNA [pos="1,0"]
DHTKD1_Protein [pos="2,0"]
Dhtkd1_DNA -> Dhtkd1_RNA -> DHTKD1_Protein
}')
plot(g)
#####
g <- dagitty('dag {
Dhtkd1\ DNA [pos="0,0"]
Dhtkd1_RNA [pos="1,0"]
DHTKD1_Protein [pos="2,0"]
Dhtkd1\ DNA -> Dhtkd1_RNA -> DHTKD1_Protein
}')
plot(g)
g
#####
g <- dagitty('dag {
Dhtkd1_DNA [pos="0,0"]
Dhtkd1_RNA [pos="1,0"]
DHTKD1_Protein [pos="2,0"]
Dhtkd1_DNA -> Dhtkd1_RNA -> DHTKD1_Protein
}')
pdf("Figs/central_dogma-Dhtkd1.pdf", height = 2)
plot(g)
dev.off()
install.packages("qtlbook")
library(qtlbook)
browseVignettes("qtlbook")
help(package = "qtlbook")
